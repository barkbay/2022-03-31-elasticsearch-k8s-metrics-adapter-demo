apiVersion: v1
kind: Namespace
metadata:
  name: elastic-monitoring
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: monitoring
  namespace: elastic-monitoring
spec:
  version: 8.1.0
  nodeSets:
    - name: masters
      config:
        node.roles: ["master"]
        node.store.allow_mmap: false
      count: 1
    - name: data
      config:
        node.roles: ["data", "ingest"]
        node.store.allow_mmap: false
      count: 3
      volumeClaimTemplates:
      - metadata:
          name: elasticsearch-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 250Gi
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: monitoring
  namespace: elastic-monitoring
spec:
  version: 8.1.0
  elasticsearchRef:
    name: monitoring
  count: 1
---
apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: elastic-scrape-prom-metrics
  namespace: elastic-monitoring
spec:
  type: metricbeat
  version: 8.1.0
  elasticsearchRef:
    name: monitoring
  config:
    metricbeat:
      modules:
        - module: kubernetes
          hosts: ["prometheus-kube-state-metrics.prometheus-monitoring.svc:8080"]
          period: 10s
          add_metadata: true
          metricsets:
            - state_statefulset
      autodiscover:
        providers:
          - type: kubernetes
            scope: cluster
            include_annotations: ["prometheus.io.scrape"]
            templates:
              - condition:
                  contains:
                    kubernetes.annotations.prometheus.io/scrape: "true"
                config:
                  - module: prometheus
                    period: 5s
                    metricsets: ["collector"]
                    hosts: "${data.host}:${data.kubernetes.annotations.prometheus.io/port}"
  deployment:
    podTemplate:
      spec:
        serviceAccountName: metricbeat
        automountServiceAccountToken: true
        volumes:
          - emptyDir: { }
            name: beat-data
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elastic-scrape-prom-metrics
rules:
  - apiGroups: [""]
    resources:
    - nodes
    - nodes/stats
    - namespaces
    - events
    - pods
    - services
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources:
    - replicasets
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources:
    - statefulsets
    - deployments
    - replicasets
    verbs: ["get", "list", "watch"]
  - apiGroups: ["batch"]
    resources:
    - jobs
    - cronjobs
    verbs: ["get", "list", "watch"]
  - apiGroups:
    - ""
    resources:
    - nodes/stats
    verbs:
    - get
  - nonResourceURLs:
    - "/metrics"
    verbs:
    - get
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metricbeat
  namespace: elastic-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: elastic-scrape-prom-metrics
  namespace: elastic-monitoring
subjects:
  - kind: ServiceAccount
    name: metricbeat
    namespace: elastic-monitoring
roleRef:
  kind: ClusterRole
  name: elastic-scrape-prom-metrics
  apiGroup: rbac.authorization.k8s.io
